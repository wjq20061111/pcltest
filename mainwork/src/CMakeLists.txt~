CMAKE_MINIMUM_REQUIRED(VERSION 2.8.12.1)
PROJECT(libfreenect2_opencv_test)

list(APPEND CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/cmake_modules)

#SET(CMAKE_CXX_FLAGS ${CMAKE_CXX_FLAGS} "-std=c++11")
SET(freenect2_LIBRARIES freenect2)
SET(CMAKE_PREFIX_PATH ${CMAKE_PREFIX_PATH} $ENV{HOME}/freenect2/lib/cmake/freenect2)
SET(HDF5_ROOT "/usr/local/hdf5")

FIND_PACKAGE( OpenCV REQUIRED )
FIND_PACKAGE(freenect2 REQUIRED)
FIND_PACKAGE(PCL 1.7 REQUIRED)
FIND_PACKAGE(Flann REQUIRED)
find_package(HDF5 REQUIRED COMPONENTS CXX)

INCLUDE_DIRECTORIES("/usr/include/libusb-1.0/")
INCLUDE_DIRECTORIES(
  ${freenect2_INCLUDE_DIR}  ${PCL_INCLUDE_DIRS}
)
INCLUDE_DIRECTORIES("iai/")

INCLUDE_DIRECTORIES(${FLANN_INCLUDE_DIRS})
include_directories(${HDF5_INCLUDE_DIR})

SET(LIBRARY_OUTPUT_PATH "../../lib")
link_directories("../../lib")

link_directories(${PCL_LIBRARY_DIRS})
add_definitions(${PCL_DEFINITIONS})

add_library(interface
interface.cpp iai/depth_registration_cpu.cpp iai/kinect2_registration.cpp
)
link_libraries(interface)
add_library(libmypcl
viewer.cpp filter.cpp segement.cpp normal.cpp VFH.cpp
)
link_libraries(libmypcl)

ADD_EXECUTABLE(temptest
  main.cpp feature.cpp
)
TARGET_LINK_LIBRARIES(temptest
  ${freenect2_LIBRARIES} ${OpenCV_LIBS} ${PCL_LIBRARIES}   ${Boost_LIBRARIES} ${FLANN_LIBRARIES} ${HDF5_hdf5_LIBRARY} libmypcl interface
) 

ADD_EXECUTABLE(capture
  capture.cpp 
)
TARGET_LINK_LIBRARIES(capture
  ${freenect2_LIBRARIES} ${OpenCV_LIBS} ${PCL_LIBRARIES}    libmypcl interface
) 
